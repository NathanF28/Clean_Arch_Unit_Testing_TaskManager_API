name: Go CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 10s
          # IMPORTANT: The above line (10s) must be the last part of the string.
          # Any comments about the options need to be outside this block,
          # or on their own separate lines as YAML comments, not part of the `options` string.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Download Go modules
        run: go mod download

      - name: Wait for MongoDB to be truly ready (additional wait)
        run: |
          for i in $(seq 1 10); do
            nc -z localhost 27017 && echo "MongoDB is ready!" && exit 0
            echo "Waiting for MongoDB... ($i/10)"
            sleep 5
          done
          echo "MongoDB did not become ready in time."
          exit 1
      - name: Run unit tests with coverage and race detection
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          MONGO_URI: mongodb://localhost:27017

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          fail_ci_if_error: true